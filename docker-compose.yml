version: '3.8'
services:
    dev:
        depends_on:
            - postgres
            - pgadmin
        container_name: reviews_api_dev
        image: reviews_api_dev:1.0.0
        build:
            context: .
            target: development
            dockerfile: ./Dockerfile
        command: npm run start:debug
        ports:
            # - 127.0.0.1:5432:5432
            - 5000:5000
        networks:
            - nesjs-network
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        restart: unless-stopped
    prod:
        depends_on:
            - postgres
            - pgadmin
        container_name: reviews_api_prod
        image: reviews_api_prod:1.0.0
        build:
            context: .
            target: production
            dockerfile: ./Dockerfile
        command: npm run start:prod
        ports:
            # - 127.0.0.1:5432:5432
            - 7000:7000
        networks:
            - nesjs-network
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        restart: unless-stopped

    postgres:
        container_name: postgres
        image: postgres:14
        environment:
            POSTGRES_USER: reviews
            POSTGRES_PASSWORD: gthbvtnh
            PGDATA: /data/postgres
        volumes:
            - postgres:/postgres
        # ports:
            # - "127.0.0.1:5432:5432"
            # - "5432:5432"
        networks:
            - nesjs-network
        restart: unless-stopped
        tty: true

    pgadmin:
        container_name: pgadmin
        image: dpage/pgadmin4
        environment:
            PGADMIN_DEFAULT_EMAIL: raznyenuzdy@gmail.com
            PGADMIN_DEFAULT_PASSWORD: lkbyyflkbyyf
            PGADMIN_CONFIG_SERVER_MODE: 'False'
        volumes:
            - pgadmin:/var/www/pgadmin
        ports:
            # - 127.0.0.1:80:5050
            # - 127.0.0.1:5050:5050
            - "5050:5.90.193.22:80"
        networks:
            - nesjs-network
        restart: unless-stopped

networks:
    nesjs-network:
      driver: bridge

volumes:
    postgres:
    pgadmin: